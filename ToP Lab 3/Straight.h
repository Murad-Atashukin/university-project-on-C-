															// Условие ifndef необходимо для того, чтобы узнать, добавляли ли мы этот участок
#ifndef _STRAIGHT_H_										// кода в наш проект или нет. Если константа определена, то повторного добавления не будет
#define _STRAIGHT_H_										// Определяем константу 

#include "Curves.h"

class Straight : public Curves								// Публично наследуемся от абстрактного класса
{															// [При публичном наследовании никакие модификаторы доступа у методов и полей 
															// от базоваого класса не изменяются (public остается public и тд)]
private:
	double k, b;

public:
	Straight();												// Конструктор без параметров
	Straight(double x, double k, double b);					// Конструктор с параметрами
	Straight(const Straight& object);						// Конструктор копирования
	~Straight() {};											// Деструктор

	void print() override;									/* Переопределённый метод print(), как бы говорит компилятору
- ищи эту функцию в классах предках выше, она виртуальна. (не найдет - выдаст ошибку) 
Без этого слова компилятор не найдя функцию у предков определит ее как новую функцию и ошибки не будет*/


	double function_for_y() override;						// Переопределённый метод volume()
	Straight& operator=(const Straight& object);			// Перегруженный оператор присваивания
};
#endif // !_STRAIGHT_H_